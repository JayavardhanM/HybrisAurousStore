<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:int="http://www.springframework.org/schema/integration"
xmlns:file="http://www.springframework.org/schema/integration/file"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/integration 
http://www.springframework.org/schema/integration/spring-integration.xsd
http://www.springframework.org/schema/integration/file 
http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config/> 

	<bean id="baseDirectoryHotfolder" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/employeeHotFolder" />
	</bean>
	
	<file:inbound-channel-adapter id="batchFilesHotfolder" directory="#{baseDirectoryHotfolder}" filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>
	
	<file:outbound-gateway request-channel="batchFilesHotfolder" reply-channel="batchFilesHotfolderProc" directory="#{baseDirectoryHotfolder}/processing" delete-source-files="true" />
	
	<int:service-activator input-channel="batchFilesHotfolderProc" output-channel="batchFilesHeaderInit" ref="hotfolderHeaderSetupTask" method="execute" />
	
	<bean id="hotfolderHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<!-- <property name="catalog" value="aurousContentCatalog" />
		<property name="net" value="false" /> -->
		<property name="storeBaseDirectory" ref="baseDirectoryHotfolder" />
	</bean>
	
	<bean id="hotfolderMyEmployeeConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>INSERT_UPDATE MyEmployee;empId[unique=true];empName;empSalary;empWorkType(code)</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3}</value>
		</property>
	</bean>
	
	<bean id="hotfolderMyEmployeeConverterMapping" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" p:mapping="MyEmployee" p:converter-ref="hotfolderMyEmployeeConverter" />

</beans>